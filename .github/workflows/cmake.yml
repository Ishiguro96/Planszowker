name: CMake Build with SFML

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-planszowker
    container:
      image: ghcr.io/ishiguro96/ubuntu-planszowker:latest
      credentials:
        username: ishiguro96
        password: ${{ secrets.DOCKER_ACTIONS }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        path: /usr/local/
    
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: /usr/local
      
    - uses: actions/checkout@v2
    - name: Create Build Environment
      #run: cmake -E make_directory ${{github.workspace}}/build
      run: |
        ls -l /usr/local/lib
        ls -l /usr/local/include
        mkdir build && cd build
        cmake .. -DSFML_DIR="/usr/local/lib/cmake/SFML/"
        make -j32

    #- name: Configure CMake
    #  shell: bash
    #  working-directory: ${{github.workspace}}/build
    #  run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSFML_DIR="/usr/local/lib"

    #- name: Build
    #  working-directory: ${{github.workspace}}/build
    #  shell: bash
    #  run: cmake --build . --config $BUILD_TYPE

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  shell: bash
    #  run: ctest -C $BUILD_TYPE
